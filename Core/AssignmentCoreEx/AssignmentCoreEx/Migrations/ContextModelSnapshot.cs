// <auto-generated />
using AssignmentCoreEx.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AssignmentCoreEx.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AssignmentCoreEx.Models.Color", b =>
                {
                    b.Property<long>("ColorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ColorID"));

                    b.Property<string>("ColorName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ColorID");

                    b.ToTable("ColorTbl");

                    b.HasData(
                        new
                        {
                            ColorID = 1L,
                            ColorName = "Red"
                        },
                        new
                        {
                            ColorID = 2L,
                            ColorName = "Black"
                        },
                        new
                        {
                            ColorID = 3L,
                            ColorName = "Violet"
                        },
                        new
                        {
                            ColorID = 4L,
                            ColorName = "Brown"
                        });
                });

            modelBuilder.Entity("AssignmentCoreEx.Models.Mfg", b =>
                {
                    b.Property<long>("MfgID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("MfgID"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MfgName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MfgID");

                    b.ToTable("MfgTbl");

                    b.HasData(
                        new
                        {
                            MfgID = 1L,
                            Address = "Wagholi",
                            EmailID = "intex@gmail.com",
                            MfgName = "Intex",
                            MobileNo = "120946573"
                        },
                        new
                        {
                            MfgID = 2L,
                            Address = "Pimpri",
                            EmailID = "polo@gmail.com",
                            MfgName = "Polo",
                            MobileNo = "120946573"
                        },
                        new
                        {
                            MfgID = 3L,
                            Address = "Baner",
                            EmailID = "samsunng@gmail.com",
                            MfgName = "Samsung",
                            MobileNo = "120046573"
                        },
                        new
                        {
                            MfgID = 4L,
                            Address = "Chinchwad",
                            EmailID = "denim@gmail.com",
                            MfgName = "Denim",
                            MobileNo = "120906573"
                        });
                });

            modelBuilder.Entity("AssignmentCoreEx.Models.Product", b =>
                {
                    b.Property<long>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ProductID"));

                    b.Property<long>("ColorID")
                        .HasColumnType("bigint");

                    b.Property<long>("MfgID")
                        .HasColumnType("bigint");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<long>("ProductCategoryID")
                        .HasColumnType("bigint");

                    b.Property<string>("ProductDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductID");

                    b.HasIndex("ColorID");

                    b.HasIndex("MfgID");

                    b.HasIndex("ProductCategoryID");

                    b.ToTable("ProductTbl");
                });

            modelBuilder.Entity("AssignmentCoreEx.Models.ProductCategory", b =>
                {
                    b.Property<long>("ProductCategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ProductCategoryID"));

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductCategoryID");

                    b.ToTable("ProCatTbl");

                    b.HasData(
                        new
                        {
                            ProductCategoryID = 1L,
                            CategoryName = "Computer"
                        },
                        new
                        {
                            ProductCategoryID = 2L,
                            CategoryName = "Cloths"
                        },
                        new
                        {
                            ProductCategoryID = 3L,
                            CategoryName = "Electronics"
                        });
                });

            modelBuilder.Entity("AssignmentCoreEx.Models.Product", b =>
                {
                    b.HasOne("AssignmentCoreEx.Models.Color", "Color")
                        .WithMany("Products")
                        .HasForeignKey("ColorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssignmentCoreEx.Models.Mfg", "Mfg")
                        .WithMany("Products")
                        .HasForeignKey("MfgID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssignmentCoreEx.Models.ProductCategory", "ProductCategory")
                        .WithMany("Products")
                        .HasForeignKey("ProductCategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Color");

                    b.Navigation("Mfg");

                    b.Navigation("ProductCategory");
                });

            modelBuilder.Entity("AssignmentCoreEx.Models.Color", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("AssignmentCoreEx.Models.Mfg", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("AssignmentCoreEx.Models.ProductCategory", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
